<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.8.xsd">

	<bean id="passwordEncoder" class="org.springframework.security.crypto.factory.PasswordEncoderFactories" 
		factory-method="createDelegatingPasswordEncoder"
	/>
	
	<bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider" 
		p:userDetailsService-ref="memberServiceImpl"
		p:passwordEncoder-ref="passwordEncoder"
		p:hideUserNotFoundExceptions="false"
	/>
	
<!-- 인증객체 관리 principal 관리 -> 누군가가 principal을  제공해줘야  -->
	<security:authentication-manager>
		<security:authentication-provider ref="daoAuthenticationProvider" />
	</security:authentication-manager>
	
	<bean id="authenticationSuccessHandler"  class="kr.or.ddit.security.handler.CustomAuthenticationSuccessHandler" 
		p:defaultTargetUrl="/"
		p:alwaysUseDefaultTargetUrl="true"
	/>
	
<!-- 로그인 관련해서도 커스텀마이징 가능 -->
		<security:http auto-config="true">
			<security:form-login 
			login-page="/login/loginForm.jsp"
			username-parameter="memId"
			password-parameter="memPass"
			login-processing-url="/login/loginProcess"
			authentication-success-handler-ref="authenticationSuccessHandler"
			
		/>
		
		<security:logout logout-url="/login/logout" logout-success-url="/" />
		
<!-- 		disable true로 주면 사용안하게 함 -->
		<security:csrf disabled="true"/>
		 
<!-- 		 쿠키도 여기서 관리 -->
		<security:remember-me remember-me-parameter="idSave" remember-me-cookie="idCookie" />
		
<!-- 		인증처리도 해주고 보호자원도 처리해줌 로그인 해야 마이페이지 갈수 있고 마이페이지 누르면 로그인으로 넘어가게 하고 로그인하면 바로 마이페이지 갈수있게  -->
<!-- 		패턴을 넣어주는게 보호자원으로 등록하는 것 헤더메뉴에 등록한것  밑에 있는 것들은 다 보호자원  -->
		<security:intercept-url pattern="/mypage" access="isAuthenticated()" />
		<!-- 	로그아웃 하려고 할때도 이미 로그인이 되있어야돼 보호자원으로 등록   -->
		<security:intercept-url pattern="/login/logout" access="isAuthenticated()" />
		<!-- 	로그아웃 말고 나머지 뎁스는 다 이걸 타게 -->
		<security:intercept-url pattern="/login/**" access="isAnonymous()" />
		
<!-- 															게시물 c,u

,d는 관리자만 가능하게 -->
		<security:intercept-url pattern="/board/boardInsert.do" access="hasRole('ADMIN')"/>
		<security:intercept-url pattern="/board/boardDelete.do" access="hasRole('ADMIN')"/>
		<security:intercept-url pattern="/board/boardUpdate.do" access="hasRole('ADMIN')"/>
		<security:intercept-url pattern="/board/**" access="isAuthenticated()"/> 
<!-- 	isAuthenticated() :	로그인 된상태  -->
		
		<!-- 	누구한테나 허가 하겠다 얘가 제일 밑에 있어야해 얘가 제일 위로가면 그밑에 있는 것들이 아무것도 안돼 /**이게 다 포함하고있어서 -->
		<security:intercept-url pattern="/**" access="permitAll" />
	</security:http>
</beans>
